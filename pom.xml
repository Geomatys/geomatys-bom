<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.6.4</version>
    </parent>
    <groupId>com.geomatys</groupId>
    <artifactId>geomatys-bom</artifactId>
    <version>2022.4-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>geomatys-bom</name>
    <description>Geomatys third-party dependencies</description>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <scm>
        <url>https://github.com/geomatys/geomatys-bom</url>
    </scm>

    <repositories>
        <repository>
            <id>spring.releases</id>
            <name>Spring release repository</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>geomatys.public</id>
            <name>Geomatys public release repository</name>
            <url>https://nexus.geomatys.com/repository/maven-public</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>unidata-all</id>
            <name>Unidata All</name>
            <url>https://artifacts.unidata.ucar.edu/repository/unidata-all/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <commons-io.version>2.11.0</commons-io.version>
        <!--
        Temporary overrides: Versions defined in Spring BOM, but not recent enough. When updating
        Spring BOM version, please check if these overrides are still needed. If not, remove them.
        -->
        <hsqldb.version>2.6.1</hsqldb.version>

        <!-- Temporary overrides: we need OLDER version for now. Check if we can upgrade it in Geotoolkit and Examind community -->
        <elasticsearch.version>7.6.1</elasticsearch.version>

        <!-- JODA is used by ElasticSearch and Geotk/Examind Community. To ensure a version convergence, We freeze it here. -->
        <joda-time.version>2.10.5</joda-time.version>

        <!--
        JAI is mainly used by Geotoolkit for image processing. In the future, it might be remove if Apache SIS
        provides sufficient replacements.
        Note that we use JAI Core and JAI Codec, but we do not define JAI ImageIO. We avoid its use, because it uses
        JDK internal classes (from java.base module) that are not exposed anymore since JDK 17
        -->
        <jai.core.version>1.1.3</jai.core.version>
        <jai.codec.version>1.1.3</jai.codec.version>

        <ucar-netcdf.version>5.5.2</ucar-netcdf.version>
        <ucar.jj2000.version>5.4</ucar.jj2000.version>
        <!-- Sync with the version used by UCAR NetCDF -->
        <guava.version>30.1-jre</guava.version>
        <jimfs.version>1.2</jimfs.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.locationtech.jts</groupId>
                <artifactId>jts-core</artifactId>
                <optional>false</optional>
                <version>1.18.2</version>
            </dependency>

            <!-- TODO: remove in the future. Used by Examind-Community for custom behavior in CSW. -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${javax-jaxb.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>javax.media</groupId>
                <artifactId>jai_core</artifactId>
                <version>${jai.core.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.media</groupId>
                <artifactId>jai_codec</artifactId>
                <version>${jai.codec.version}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <type>pom</type> <!-- See https://groovy.apache.org/download.html#buildtools -->
                <exclusions>
                    <!--
                    Exclude groovy-test dependencies, we do not need them. Moreover, it also bring testNG and its own
                    JUnit version, and we do not want that.
                    -->
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-testng</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-test</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-test-junit5</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <!--
            For now, we don't use UCAR BOM, because it might erase dependency versions from Spring.
            We depends mostly of Spring for our products, so it must take precedence.
            -->
            <dependency>
                <groupId>edu.ucar</groupId>
                <artifactId>cdm-core</artifactId>
                <version>${ucar-netcdf.version}</version>
            </dependency>

            <dependency>
                <groupId>edu.ucar</groupId>
                <artifactId>grib</artifactId>
                <version>${ucar-netcdf.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.ucar</groupId>
                <artifactId>netcdf4</artifactId>
                <version>${ucar-netcdf.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.ucar</groupId>
                <artifactId>jj2000</artifactId>
                <version>${ucar.jj2000.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>

                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.jimfs</groupId>
                <artifactId>jimfs</artifactId>
                <version>${jimfs.version}</version>
                <scope>test</scope>
                <exclusions>
                    <!-- Exclude because we want JRE version, not android -->
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>1.4.13</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
                <!-- Verify if it is still necessary -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.10.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
